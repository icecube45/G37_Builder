# FROM https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2021-11-08/2021-10-30-raspios-bullseye-armhf-lite.zip
# FROM https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2022-01-28/2022-01-28-raspios-bullseye-arm64-lite.zip
FROM https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2023-05-03/2023-05-03-raspios-bullseye-arm64-lite.img.xz
PUMP 1000M

# Update OS and sources
RUN <<EOF
apt-get update
DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade
apt-get install -y sl
apt-get autoremove -y
EOF


# Disable boot text
RUN <<EOF
echo "logo.nologo" >>  /boot/cmdline.txt
EOF

# Add pi user
RUN <<EOF
echo "pi:\$6\$ghKLjE2C3qTJZtde\$AjJ9HXBpawoN/iqCTU8KBtaOngUx5GLY0qkEJP0F7VKTLL5fkX7q9K4oSiZYVFJBc09NocagToQzbnNz/eph71" >> /boot/userconf
EOF


# Disable timesyncd for better boot time
RUN <<EOF
# systemctl disable systemd-timesyncd
# systemctl disable cups.service
# systemctl disable avahi-daemon.service
# systemctl disable dphys-swapfile.service
# systemctl disable apt-daily.service
# systemctl disable keyboard-setup.service
# systemctl disable raspi-config.service
# systemctl disable triggerhappy.service
EOF

# Apply Boomerang and touchscreen settings
RUN <<EOF
cat <<EOT >> /boot/config.txt
#RGBS
dtoverlay=vc4-kms-vga666

#touchscreen
dtparam=i2c_arm=on
dtparam=i2c1=off
dtparam=i2c0=on

dtoverlay=g37_touchscreen
boot_delay=0
dtparam=krnbt
EOT
EOF

# Compile touchscreen overlay
INSTALL "scripts/g37_touchscreen.dts" "/tmp/g37_touchscreen.dts"
RUN <<EOF
cd /tmp
dtc -I dts -O dtb -o g37_touchscreen.dtbo g37_touchscreen.dts
mv g37_touchscreen.dtbo /boot/overlays/
rm g37_touchscreen.dts
EOF

# CAN settings
RUN <<EOF
cat <<EOT >> /etc/network/interfaces
allow-hotplug can0
iface can0 can static
    bitrate 500000
EOT
EOF

RUN mkdir -p /usr/share/X11/xorg.conf.d
# Touchscreen calibration
INSTALL "scripts/99-calibration.conf" "/usr/share/X11/xorg.conf.d/99-calibration.conf"

# Mausberry setup
RUN <<'EOF'
cat <<'EOT' >> /etc/switch.sh
#!/bin/bash

#this is the GPIO pin connected to the lead on switch labeled OUT
GPIOpin1=24

#this is the GPIO pin connected to the lead on switch labeled IN
GPIOpin2=23

#Enter the shutdown delay in minutes
delay=2

echo "$GPIOpin1" > /sys/class/gpio/export
echo "in" > /sys/class/gpio/gpio$GPIOpin1/direction
echo "$GPIOpin2" > /sys/class/gpio/export
echo "out" > /sys/class/gpio/gpio$GPIOpin2/direction
echo "1" > /sys/class/gpio/gpio$GPIOpin2/value
let minute=$delay*60
SD=0
SS=0
SS2=0
while [ 1 = 1 ]; do
power=$(cat /sys/class/gpio/gpio$GPIOpin1/value)
uptime=$(</proc/uptime)
uptime=${uptime%%.*}
current=$uptime
if [ $power = 1 ] && [ $SD = 0 ]
then
SD=1
SS=${uptime%%.*}
fi

if [ $power = 1 ] && [ $SD = 1 ]
then
SS2=${uptime%%.*}
fi

if [ "$((uptime - SS))" -gt "$minute" ] && [ $SD = 1 ] && [ $power = 1 ]
then
poweroff
SD=3
fi

if [ "$((uptime - SS2))" -gt '20' ] && [ $SD = 1 ]
then
SD=0
fi

sleep 1
done
EOT
chmod 777 /etc/switch.sh
sed -i '$ i /etc/switch.sh &' /etc/rc.local
EOF

# setup access point
RUN <<EOF
apt-get install -y hostapd
systemctl unmask hostapd
systemctl enable hostapd
apt-get install -y dnsmasq
cat <<EOT >> /etc/dhcpcd.conf
interface wlan0
    static ip_address=192.168.4.1/24
    nohook wpa_supplicant
EOT
cat <<EOT >> /etc/dnsmasq.conf 
interface=wlan0 # Listening interface
dhcp-range=192.168.4.2,192.168.4.20,255.255.255.0,24h
                # Pool of IP addresses served via DHCP
domain=wlan     # Local wireless DNS domain
address=/gw.wlan/192.168.4.1
                # Alias for this router
EOT
cat <<EOT >> /etc/hostapd/hostapd.conf
country_code=US
interface=wlan0
ssid=InfinitiG37
hw_mode=a
channel=36
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=InfinitiG30Pi
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
EOT
EOF


# configure memory split and disable screensaver, set hostname
RUN <<EOF
raspi-config nonint do_memory_split 128
raspi-config nonint do_hostname InfinitiG37
sed -i 's/apt-get install realvnc-vnc-server/apt-get install -y realvnc-vnc-server/g' /usr/bin/raspi-config
raspi-config nonint do_vnc 0
raspi-config nonint do_ssh 0
raspi-config nonint do_wifi_country US
raspi-config nonint do_blanking 1
rfkill unblock wlan

EOF
